#!/bin/bash

# Directory where certificates will be stored
CERT_DIR="./docker/certs"

# Create the directory if it doesn't exist
sudo mkdir -p $CERT_DIR

# Step 1: Check if the private key exists, if not, generate it
KEY_FILE="$CERT_DIR/allboarder.key"
if [ ! -f "$KEY_FILE" ]; then
    echo "Generating a private key..."
    sudo openssl genrsa -out $KEY_FILE 2048
else
    echo "Private key already exists, skipping generation."
fi

# Step 2 and 3: Generate Self-Signed SSL Certificates for each subdomain, if they don't already exist
for SUBDOMAIN in "api.allboarder.localhost" "app.allboarder.localhost"
do
    CSR_FILE="$CERT_DIR/$SUBDOMAIN.csr"
    CRT_FILE="$CERT_DIR/$SUBDOMAIN.crt"
    SUBDOMAIN_KEY_FILE="$CERT_DIR/$SUBDOMAIN.key"

    if [ ! -f "$CRT_FILE" ]; then
        echo "Creating SSL certificate for $SUBDOMAIN..."

        # Generate CSR and Certificate with the correct names
        sudo openssl req -new -key $KEY_FILE -out $CSR_FILE -subj "/CN=$SUBDOMAIN"
        sudo openssl x509 -req -days 365 -in $CSR_FILE -signkey $KEY_FILE -out $CRT_FILE

        # Copy the key to a file named after the subdomain
        sudo cp $KEY_FILE $SUBDOMAIN_KEY_FILE
    else
        echo "SSL certificate for $SUBDOMAIN already exists, skipping."
    fi
done


echo "SSL certificate check and generation process completed."

# Additional instructions (like updating Nginx configuration) can be added here

# Step 5: Restart Nginx (Optional, if you're using Docker Compose)
# sudo docker-compose restart [nginx-service-name]

echo "Setup complete. Please check your Nginx configuration and restart Nginx if necessary."